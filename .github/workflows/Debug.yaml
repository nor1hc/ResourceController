name: Debug

on:
  workflow_dispatch: {}

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Debug
        env:
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: |
          gh workflow list
          # Fetch the workflow ID using GitHub CLI
          WORKFLOW_ID=$(gh api "/repos/${GITHUB_REPOSITORY}/actions/workflows" \
            | jq -r ".workflows[] | select(.name == \"${GITHUB_WORKFLOW}\") | .id")

          echo "Current Workflow ID: $WORKFLOW_ID"
          # Fetch workflow runs
          WORKFLOW_RUNS=$(gh api "/repos/${GITHUB_REPOSITORY}/actions/workflows/${WORKFLOW_ID}/runs" \
            | jq '.workflow_runs[] | {id: .id, status: .status, conclusion: .conclusion, created_at: .created_at}')

          echo "Workflow Runs:"
          echo "$WORKFLOW_RUNS"
          # Loop through each workflow run
          echo "$WORKFLOW_RUNS" | while read -r RUN; do
            RUN_ID=$(echo "$RUN" | jq -r '.id')
            STATUS=$(echo "$RUN" | jq -r '.status')
            CONCLUSION=$(echo "$RUN" | jq -r '.conclusion')

            # Skip running workflows
            if [[ "$STATUS" == "in_progress" || "$STATUS" == "queued" ]]; then
              echo "Skipping running workflow run: $RUN_ID"
              continue
            fi

            # Delete the non-running workflow run
            echo "Deleting workflow run: $RUN_ID (Status: $STATUS, Conclusion: $CONCLUSION)"
            gh api -X DELETE "/repos/${GITHUB_REPOSITORY}/actions/runs/${RUN_ID}" \
              && echo "Deleted workflow run: $RUN_ID"
          done