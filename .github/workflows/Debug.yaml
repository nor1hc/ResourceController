name: Debug

on:
  workflow_dispatch: {}

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v4

      - name: Clean old run log
        id: clean_old_run
        env:
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          GITHUB_API_URL: https://api.github.com
        run: |
          export
          API_URL=${GITHUB_API_URL:-"https://api.github.com"}
          WORKFLOW_ID=$(gh api "${API_URL}/repos/${GITHUB_REPOSITORY}/actions/workflows" | jq -r ".workflows[] | select(.name == \"${GITHUB_WORKFLOW}\") | .id")

          gh api "${API_URL}/repos/${GITHUB_REPOSITORY}/actions/workflows/${WORKFLOW_ID}/runs" \
            | jq -r --arg CURRENT_RUN_ID "$GITHUB_RUN_ID" '.workflow_runs[] | select(.id != ($CURRENT_RUN_ID | tonumber) and (.status == "in_progress" or .status == "queued")) | .id' \
            | while read -r RUN_ID; do
                echo "Cancelling workflow run ID: $RUN_ID"
                if gh api -X POST "${API_URL}/repos/${GITHUB_REPOSITORY}/actions/runs/${RUN_ID}/cancel"; then
                  echo "Successfully cancelled workflow run ID: $RUN_ID"
                else
                  echo "Failed to cancel workflow run ID: $RUN_ID"
                fi
            done

          gh api "${API_URL}/repos/${GITHUB_REPOSITORY}/actions/workflows/${WORKFLOW_ID}/runs" \
            | jq -r --arg CURRENT_RUN_ID "$GITHUB_RUN_ID" '.workflow_runs[] | select(.id != ($CURRENT_RUN_ID | tonumber)) | .id' \
            | while read -r RUN_ID; do
                echo "Deleting workflow run ID: $RUN_ID"
                gh api -X DELETE "${API_URL}/repos/${GITHUB_REPOSITORY}/actions/runs/${RUN_ID}" && \
                echo "Deleted $RUN_ID" || echo "Failed to delete $RUN_ID"
            done

      # - name: Clean up disk
      #   id: clean_disk
      #   run: |
      #     docker run -v /:/host_machine bash -c "rm -rf /host_machine/opt/hostedtoolcache /host_machine/usr/local/lib/android /host_machine/usr/local/share/powershell"

      # - name: Check have running workflow
      #   id: check_running_workflow
      #   env:
      #     GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      #     GITHUB_API_URL: https://api.github.com
      #     WORKFLOW_NAME: Deploy
      #   run: |
      #     API_URL=${GITHUB_API_URL:-"https://api.github.com"}
      #     WORKFLOW_ID=$(gh api "${API_URL}/repos/${GITHUB_REPOSITORY}/actions/workflows" | jq -r ".workflows[] | select(.name == \"${WORKFLOW_NAME}\") | .id")

      #     gh api "${API_URL}/repos/${GITHUB_REPOSITORY}/actions/workflows/${WORKFLOW_ID}/runs" | jq -e '.workflow_runs[] | select(.status == "in_progress")' >/dev/null && echo "Running workflows detected. Exiting." && exit 1 || echo "No running workflows found."
      #     gh api -X POST "${API_URL}/repos/${GITHUB_REPOSITORY}/actions/workflows/${WORKFLOW_NAME}.yaml/dispatches" -F ref=main

      - name: Clean offline runners
        env:
          REPO_URL: ${{ secrets.GH_REPO }}
        run: |
          OWNER=$(basename $(dirname $REPO_URL)); REPO=$(basename $REPO_URL)
          gh api /repos/$OWNER/$REPO/actions/runners | jq -r '.runners[] | select(.status=="offline").id' \
          | xargs -I{} gh api -X DELETE /repos/$OWNER/$REPO/actions/runners/{}
